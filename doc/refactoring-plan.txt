This is a rough draft of how to go about refactoring mikmod so it
meets the following goals (roughly in order of importance).

- portable to big-endian architectures
- portable to all major C++ compilers (few warnings)
- readable

Note:  This fork of mikmod is simply a MOD decoder.  It is not
responsible for interfacing with audio output APIs.  Nor is it
responsible for understanding WAV files.

1) build unit test framework with all of the mod files in existence
   (see http://c2.com/cgi/wiki?TestsAsScaffolding)
2) convert every .c file to .cpp
3) move mmio into base mikmod module
4) remove all x86 assembly (for now, it just gets in the way)
5) remove the chunks of the code that don't fit the revised project
   goal
6) ... (add more later)
